
@mainBaseColor : #0CB3D7;
@mainLightColor : #EEF8F9;


/* Import all components */
@import 'pxtsemantic';
@import 'pxt';
@import 'blockly-toolbox';
@import 'themes/default/globals/site.variables';
@import 'themes/pxt/globals/site.variables';
@import 'site/globals/site.variables';

/* Reference import */
@import (reference) "semantic.less";

/*******************************
    Custom editor CSS
*******************************/

.ui.item.logo .name {
    font-size: 20px;
    font-family: @headerFont;
    font-weight: 400;
    color: white;
    text-transform: uppercase;
    margin-left: 1rem;
}


.ui.dropdown > .left.menu {
    left: auto !important;
    right: 0 !important
}

.projectsdialog .getting-started-segment{
    background-position: center;
    background-size: contain;
}

/*
.ui.inverted.menu {
    background: @mainBaseColor;
}

.menubar .ui.menu.inverted.fixed .ui.item.editor-menuitem .active.item{
    background: @mainBaseColor;
}
*/

.ui.positive.button, .ui.positive.buttons .button{
    background-color: @mainBaseColor;
}
.ui.green.button, .ui.green.buttons .button{
    background-color: @mainBaseColor;
}

div.ui.card.link.newprojectcard{
    background-color: @mainBaseColor !important;
}

i.green.icon{
    color: @mainBaseColor !important;
}
.ui.menu{
    background-color: @white;
}

.ui.segment{
    background-color: #edfbfc;

}
.ui.grid {
    background-color: @mainLightColor;
}
#downloadArea {
    background-color: @mainLightColor;
}
.ui.inverted.segment, .ui.primary.inverted.segment {
    background-color: @mainLightColor;
}

.projectsdialog .ui.segment.tabsegment {
    background-color: @mainLightColor;
}
.projectsdialog .detailview.visible .ui.grid {
    background-color: @mainLightColor;
}

/* Mobile */
@media only screen and (max-width: @largestMobileScreen) {
}

/* Tablet */
@media only screen and (min-width: @tabletBreakpoint) and (max-width: @largestTabletScreen) {
}

/* Small Monitor */
@media only screen and (min-width: @computerBreakpoint) and (max-width: @largestSmallMonitor) {
}

/* Large Monitor */
@media only screen and (min-width: @largeMonitorBreakpoint) {
}
